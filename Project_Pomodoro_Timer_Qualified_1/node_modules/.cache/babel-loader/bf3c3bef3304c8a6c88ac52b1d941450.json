{"ast":null,"code":"var _jsxFileName = \"/Users/tonybcod1ng/Documents/Thinkful/Qualified/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/ShowProgressBar.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ShowProgressBar({\n  allTheThings\n}) {\n  const focusSecondsTotal = allTheThings.focusVal * 60;\n  const breakSecondsTotal = allTheThings.breakVal * 60;\n  let percentage = 0;\n\n  if (allTheThings.focusBreak) {\n    percentage = 100 - allTheThings.secondsRemaining / focusSecondsTotal * 100;\n  } else {\n    percentage = 100 - allTheThings.secondsRemaining / breakSecondsTotal * 100;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row mb-2\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        style: {\n          height: \"20px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          role: \"progressbar\",\n          \"aria-valuemin\": \"0\",\n          \"aria-valuemax\": \"100\",\n          \"aria-valuenow\": percentage // TODO: Increase aria-valuenow as elapsed time increases\n          ,\n          style: {\n            width: `${percentage}%`\n          } // TODO: Increase width % as elapsed time increases\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_c = ShowProgressBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowProgressBar\");","map":{"version":3,"sources":["/Users/tonybcod1ng/Documents/Thinkful/Qualified/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/ShowProgressBar.js"],"names":["React","ShowProgressBar","allTheThings","focusSecondsTotal","focusVal","breakSecondsTotal","breakVal","percentage","focusBreak","secondsRemaining","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,eAAT,CAAyB;AAAEC,EAAAA;AAAF,CAAzB,EAA2C;AAExD,QAAMC,iBAAiB,GAAGD,YAAY,CAACE,QAAb,GAAwB,EAAlD;AACA,QAAMC,iBAAiB,GAAGH,YAAY,CAACI,QAAb,GAAwB,EAAlD;AAEA,MAAIC,UAAU,GAAG,CAAjB;;AAEA,MAAIL,YAAY,CAACM,UAAjB,EAA6B;AAC3BD,IAAAA,UAAU,GAAG,MAAQL,YAAY,CAACO,gBAAb,GAAgCN,iBAAjC,GAAsD,GAA1E;AACD,GAFD,MAEO;AACLI,IAAAA,UAAU,GAAG,MAAQL,YAAY,CAACO,gBAAb,GAAgCJ,iBAAjC,GAAsD,GAA1E;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAA0B,QAAA,KAAK,EAAE;AAAEK,UAAAA,MAAM,EAAE;AAAV,SAAjC;AAAA,+BACE;AACE,UAAA,SAAS,EAAC,cADZ;AAEE,UAAA,IAAI,EAAC,aAFP;AAGE,2BAAc,GAHhB;AAIE,2BAAc,KAJhB;AAKE,2BAAeH,UALjB,CAK6B;AAL7B;AAME,UAAA,KAAK,EAAE;AAAEI,YAAAA,KAAK,EAAG,GAAEJ,UAAW;AAAvB,WANT,CAMsC;;AANtC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;KA7BuBN,e","sourcesContent":["import React from \"react\";\n\nexport default function ShowProgressBar({ allTheThings }) {\n  \n  const focusSecondsTotal = allTheThings.focusVal * 60;\n  const breakSecondsTotal = allTheThings.breakVal * 60;\n\n  let percentage = 0;\n\n  if (allTheThings.focusBreak) {\n    percentage = 100 - ((allTheThings.secondsRemaining / focusSecondsTotal) * 100)\n  } else {\n    percentage = 100 - ((allTheThings.secondsRemaining / breakSecondsTotal) * 100)\n  }\n  \n  return (\n    <div className=\"row mb-2\">\n      <div className=\"col\">\n        <div className=\"progress\" style={{ height: \"20px\" }}>\n          <div\n            className=\"progress-bar\"\n            role=\"progressbar\"\n            aria-valuemin=\"0\"\n            aria-valuemax=\"100\"\n            aria-valuenow={percentage} // TODO: Increase aria-valuenow as elapsed time increases\n            style={{ width: `${percentage}%` }} // TODO: Increase width % as elapsed time increases\n          />\n        </div>\n      </div>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}