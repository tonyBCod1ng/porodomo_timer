{"ast":null,"code":"var _jsxFileName = \"/Users/tonybcod1ng/Documents/Thinkful/Qualified/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Display.js\";\nimport React from \"react\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\nimport ProgressBar from \"./ShowProgressBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function DisplayDuration({\n  isTimerRunning,\n  allComponents\n}) {\n  function theHappening() {\n    let titleText = \"\";\n\n    if (allComponents.focusBreak) {\n      titleText = `Focusing for ${minutesToDuration(allComponents.focusVal)} minutes`;\n    } else if (!allComponents.focusBreak) {\n      titleText = `On Break for ${minutesToDuration(allComponents.breakVal)} minutes`;\n    }\n\n    let subTitleText = `${secondsToDuration(allComponents.secondsRemaining)} remaining`;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            \"data-testid\": \"session-title\",\n            children: titleText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"lead\",\n            \"data-testid\": \"session-sub-title\",\n            children: subTitleText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), isTimerRunning ? null : /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"PAUSED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        allComponents: allComponents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  if (allComponents.hasStarted) {\n    return theHappening();\n  } else {\n    return null;\n  }\n}\n_c = DisplayDuration;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayDuration\");","map":{"version":3,"sources":["/Users/tonybcod1ng/Documents/Thinkful/Qualified/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Display.js"],"names":["React","minutesToDuration","secondsToDuration","ProgressBar","DisplayDuration","isTimerRunning","allComponents","theHappening","titleText","focusBreak","focusVal","breakVal","subTitleText","secondsRemaining","hasStarted"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,QAAqD,mBAArD;AACA,OAAOC,WAAP,MAAwB,mBAAxB;;;AAEA,eAAe,SAASC,eAAT,CAAyB;AAAEC,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,CAAzB,EAA4D;AACzE,WAASC,YAAT,GAAwB;AACtB,QAAIC,SAAS,GAAG,EAAhB;;AACA,QAAIF,aAAa,CAACG,UAAlB,EAA8B;AAC5BD,MAAAA,SAAS,GAAI,gBAAeP,iBAAiB,CAC3CK,aAAa,CAACI,QAD6B,CAE3C,UAFF;AAGD,KAJD,MAIO,IAAI,CAACJ,aAAa,CAACG,UAAnB,EAA+B;AACpCD,MAAAA,SAAS,GAAI,gBAAeP,iBAAiB,CAC3CK,aAAa,CAACK,QAD6B,CAE3C,UAFF;AAGD;;AAED,QAAIC,YAAY,GAAI,GAAEV,iBAAiB,CACrCI,aAAa,CAACO,gBADuB,CAErC,YAFF;AAIA,wBACE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCAEE;AAAI,2BAAY,eAAhB;AAAA,sBAAiCL;AAAjC;AAAA;AAAA;AAAA;AAAA,kBAFF,eAIE;AAAG,YAAA,SAAS,EAAC,MAAb;AAAoB,2BAAY,mBAAhC;AAAA,sBACGI;AADH;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAWGP,cAAc,GAAG,IAAH,gBAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAX3B,eAYE,QAAC,WAAD;AAAa,QAAA,aAAa,EAAEC;AAA5B;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA,oBADF;AAgBD;;AAED,MAAIA,aAAa,CAACQ,UAAlB,EAA8B;AAC5B,WAAOP,YAAY,EAAnB;AACD,GAFD,MAEO;AACL,WAAO,IAAP;AACD;AACF;KAxCuBH,e","sourcesContent":["import React from \"react\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\nimport ProgressBar from \"./ShowProgressBar\";\n\nexport default function DisplayDuration({ isTimerRunning, allComponents }) {\n  function theHappening() {\n    let titleText = \"\";\n    if (allComponents.focusBreak) {\n      titleText = `Focusing for ${minutesToDuration(\n        allComponents.focusVal\n      )} minutes`;\n    } else if (!allComponents.focusBreak) {\n      titleText = `On Break for ${minutesToDuration(\n        allComponents.breakVal\n      )} minutes`;\n    }\n\n    let subTitleText = `${secondsToDuration(\n      allComponents.secondsRemaining\n    )} remaining`;\n\n    return (\n      <>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            {/* TODO: Update message below to include current session (Focusing or On Break) and total duration */}\n            <h2 data-testid=\"session-title\">{titleText}</h2>\n            {/* TODO: Update message below to include time remaining in the current session */}\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n              {subTitleText}\n            </p>\n          </div>\n        </div>\n        {isTimerRunning ? null : <h2>PAUSED</h2>}\n        <ProgressBar allComponents={allComponents} />\n      </>\n    );\n  }\n\n  if (allComponents.hasStarted) {\n    return theHappening();\n  } else {\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}